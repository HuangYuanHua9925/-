HashMap简介:
	1.HashMap是一个散列表，它存储的内容是键值对（key-value）映射。
	2.HashMap继承AbstractMap，实现Map、Cloneable、java.io.Serializable接口。
	3.HashMap的实现是不是同步的，这意味着它不是线程安全的。它的key、value都可以为null。
		此外，HashMap中的映射不是有序的。
	4.HashMap的实例有两个参数影响其性能：“初始容量”和“加载因子”。容量是哈希表中桶的数量，
		初始容量是哈希表在创建时的容量。加载因子是哈希表在其容量自动增加之前可以达到多满的一种尺度。
		当哈希表中的条目超出了加载因子和当前容量的乘积时，则要对该哈希表进行rehash操作（即重建内部数据结构），
		从而哈希表将具有大约两倍的桶数。通常，默认初始容量是16，默认加载因子是0.75，这是在时间和空间成本上
		寻求一种折衷，加载因子过高虽然减少了空间的开销，但是同时也增加了查询成本(在大多数HahMap类
		的操作中，包括get和put操作，都反映了这一点）。在设置初始容量时应该考虑到映射中所需的条目数及加载因子，
		以便最大限度地减少rehash操作次数。如果初始容量大于最大条目数量除以加载因子，则不会发生rehash操作。
HashMap的构造函数：
	//默认构造函数
	HashMap();
	//指定容量大小的构造函数
	HashMap（int capacity）；
	//指定容量大小和加载因子的构造函数
	HashMap（int capacity，float loadFactor）；
	//包含子Map的构造函数
	HashMap（Map< ? extends K,? extends V> map);
	
HashMap就是一个散列表，它是通过“拉链法”解决哈希冲突的。

HashMap	最大容量是1<<30(3G),
	