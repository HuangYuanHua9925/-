分布式一致性：

分布式系统对数据的复制需求一般都来自一下两个原因：
	1、为了增加系统的可用性，以防止单点故障引起系统不可用。
	2、提高系统的整体性能，通过负载均衡技术，能够让分布式在不同地方的数据副本都能够为用户提供服务。
	
一致性的级别：
	1.强制一致性
		这种一致性级别是最符合用户的直觉的，它要求系统写入什么，读出也会是什么，用户体验好，但实现起来往往对系统的性能影响大。
	2.弱一致性
		这种一致性级别约束了系统在写入成功后，不承诺立即可以读到写入的值，也不能承诺多久之后数据能够达到一致，
		但会尽可能保证某个时间级别（比如秒级别）后，数据能够达到一致状态。
	3.最终一致性
		最终一致性是弱一致性的一个特例，系统会保证在一定时间内，能够达到一个数据一致的状态。这里之所以将最终一致性单独提出来，
		是因为它是弱一致性中非常推荐的一种一致性模型，也是业界在大型分布式系统的数据一致性上比较推崇的模型。
		
分布式环境的各种问题：
	1.通讯异常
	2.网络分区
	3.三态
		分布式系统的每个请求与响应，存在特有的三态概念，即成功、失败、超时。
		可能会出现会出现超时现象，通常有以下两种情况：
			1.由于网络原因，该请求并没有被成功的发送到接收方，而是在发送过程中就发生信息丢失现象。
			2.该请求成功地被接收方接收后，进行了处理，但是在将响应回馈给发送方发生了消息丢失现象。
	4.节点故障
	
分布式事务：
	
CAP理论：
	C：一致性（Consistency）
	A:可用性（Availability）
	P：分区容错性（Partition tolerance）
	
	1.一致性：在分布式环境下，一致性是指数据在多个副本之间能否保持一致的特性。
	2.可用性：可用性是指系统提供的服务必须一直处于可用的状态，对于用户的每一个操作请求总是能够在有限的时间内返回结果。
	3.分区容错性：分区容错性约束了一个分布式系统具有如下特性：分布式系统在遇到任何网络分区故障的时候，仍然需要
		保证对外提供满足一致性和可用性的服务，除非整个网络环境都发生了故障。
BASE理论：
	Basically Available（基本可用）
	Soft state（软状态）
	Eventually consistent（最终一致性）
	BASE理论的核心思想：即使无法做到强一致性，但每一个应用都可以根据自身的业务特点，采用适当的方式来使系统达到最终一致性。
	
	1.基本可用：基本可用是指分布式系统在出现不可预知故障的时候，允许损失可用性
		(1.响应时间上的损失，正常情况下，一个在线搜索引擎需要在0.5秒内返回相应的查询结果，但由于出现故障，查询结果的响应时间增加
			了一到两秒。
		(2.系统功能上的损失：正常情况下，在一个电子商务网站进行购物的时候，消费之几乎能够顺利的完成每一笔订单，
			但是在一些节日大促购物高峰的时候，由于消费者的购物行为激增，为了保护购物系统的稳定性，部分购物者
			会被引导到一个降级页面。
	2.软状态：
		软状态指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，
		即允许系统在不同节点的数据副本之间进行数据同步的过程延时。
	3.最终一致性：
		最终一致性强调的是所有的数据副本，在经历一段时间的同步后，最终能够达到一个一致性的状态，因此，
		最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时的保证系统数据的强一致性。
		
	